# Test file for fossilized birth-death process (not work yet)

# read the data/tree
data <- readDiscreteCharacterData("data/test.nex")[1]

# get some useful variables from the data
names <- data.names()
nSites <- data.nchar()[1]

# fossilized birth-death process priors
# speciation    ~ exponential(0.1)
# extinction    ~ exponential(0.1)
# fossilization ~ exponential(0.1)
# rho <- 1.0  
# for piece-wise constant rates, vectors are needed for sp, ex, fo, rho
# org ~ unif(0.0,100.0)
tmrca ~ unif(0.0,100.0)

# tree from birth-death process
# tau ~ fossilizedBirthDeathRandom(origin=org, lambda=speciation, mu=extinction, psi=fossilization, rho=rho, names=names, condition="survival")
# rel_tau ~ uniformRelativeTipTimeTree( names=names )
# tau := convertRelativeTimeTreeToTimeTree( rel_tau, tmrca)

tau ~ uniformTimeTree(orig=1000.0, taxon=names)

# Calibrating fossils
fossilNames <- v("F1","F2","F3","F4","F5","F6","F7")
fossilTimes <- v(2.3, 6.3, 19.1, 7.0, 2.4, 1.5, 2.7)
for (i in 1:7) {
	clade[i] <- clade(fossilNames[i])
	t[i] := tmrca(tau, clade[i])
	f[i] ~ norm(mean = t[i], sd = 1)  # truncnorm?
	f[i].clamp(fossilTimes[i])
}

# set tmrca
clade[8] <- clade(names)
t[8] := tmrca(tau, clade[8])
f[8] ~ norm(mean=50.0, sd=25.0 )
f[8].clamp(50.0)

kappa ~ exponential(0.5)
pi ~ dirichlet(v(1,1,1,1))
# the rate matrix
Q := HKY(kappa,pi)

clockRate <- norm(mean=0.003, sd=0.001)

# not working
seq ~ substModel(tree=tau, Q=Q, branchRates=clockRate, nSites=nSites, type="DNA")
seq.clamp(data)

# moves[moves.size()+1] <- mScale(speciation, lambda=1.0, tune=true, weight=3.0)
# moves[moves.size()+1] <- mScale(extinction, lambda=1.0, tune=true, weight=3.0)
# moves[moves.size()+1] <- mScale(fossilization, lambda=1.0, tune=true, weight=3.0)
moves[moves.size()+1] <- mSlide(org, delta=1.0, tune=true, weight=3.0)

moves[moves.size()+1] <- mNarrow(tau, 5.0)
moves[moves.size()+1] <- mFNPR(tau, 2.0)
moves[moves.size()+1] <- mSubtreeScale(tau, 5.0)
moves[moves.size()+1] <- mTreeScale(tau, 1.0, true, 1.0)
moves[moves.size()+1] <- mNodeTimeSlideUniform(tau, 20.0)
moves[moves.size()+1] <- mRootTimeSlide(tau, 1.0, true, 1.0)
moves[moves.size()+1] <- mScale(kappa, lambda=1.0, tune=true, weight=3.0)

mymodel <- model(tau)

monitors[1] <- modelmonitor(filename="FBD_R.log",printgen=10, separator = "	")
monitors[2] <- screenmonitor(printgen=1000, separator = "	", speciation, extinction, fossilization, org)

mymcmc <- mcmc(mymodel, monitors, moves)

mymcmc.burnin(generations=5000,tuningInterval=250)
mymcmc.run(generations=50000)

mymcmc.operatorSummary()

q()
