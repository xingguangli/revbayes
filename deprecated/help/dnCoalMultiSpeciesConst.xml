<?xml version="1.0"?>
<?xml-stylesheet href="lib/help.xsl" type="text/xsl"?>

<revbayes-help
	xmlns="http://www.revbayes.org/schema/help-entry"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.revbayes.org/schema/help-entry lib/rb-help-entry.xsd"
>
    <distribution-help-entry>

        <name>dnCoalMultiSpeciesConst</name>

        <alias>dnCoalMSConst</alias>

        <title>Multispecies coalescent distribution with constant effective population sizes along each lineage.</title>

        <description>
            <p>
                The 'dnCoalMultiSpeciesConst' distribution specifies a probability distribution on gene trees given a species time tree and a vector of effective population sizes, one per branch of the species tree.
                If only one effective population size is provided, all branches of the species tree are associated to the same effective population size.    
                In all cases, effective population sizes are assumed to be piecewise constant, i.e. along a given branch of the species tree, the effective population size does not vary. 
                A vector of taxa specifies how many leaves are expected in the gene trees, provides their names, and the species they correspond to. There can be several alleles per species. The number of alleles can vary across species.
            </p>
        </description>
    
        <constructor-help-entry>
        

            <usage>
                <![CDATA[
                 dnCoalMultiSpeciesConst( TimeTree speciesTree, RealPos Ne, Taxon[] taxa )
                 ]]> 
            </usage>
        
            <argument>
                <label>speciesTree</label>
                <argumentPassingMethod>by-const-reference</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>The species tree, with species names as tips.</description>
                <valueType>TimeTree</valueType>
            </argument>
            <argument>
                <label>Ne</label>
                <argumentPassingMethod>by-const-reference</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>The effective population size or a vector of effective population sizes.</description>
                <valueType>RealPos, RealPos[]</valueType>
            </argument>
            <argument>
                <label>taxa</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>A vector of taxa corresponding to genes coming from the genomes of the species found in the species tree.</description>
                <valueType>Taxon[]</valueType>
            </argument>

            <returnValue>Dist_constPopMultispCoal, Distribution__TimeTree, Distribution, RevObject</returnValue>

            <details>
                <!-- Since this section can be lengthy, the text is sectioned with <p> tags -->
                <p>
                This distribution can be used for both inference and simulation.
                It was first proposed by Rannala and Yang (2003) and is widely used for species tree/gene tree inference.
                </p>
            </details>

            <example>
                <![CDATA[
                 # In this example, we first simulate gene trees given a species tree, and then we compute the probability of the gene trees given the species tree.
				# Number of species
				n_species = 4
				# Number of loci (in this example we just use 1)
				n_loci = 1 
				# Number of alleles per species
				n_alleles = v(1,2,1,1)

				# Species names
				for (i in 1:n_species) {
        			s_names[i] = "Species_"+i
				}


				# Species-Tree model
				# We simulate a species tree topology according to a birth-death process with arbitrary parameter values:
				speciation ~ dnExponential(10.0)
				extinction ~ dnExponential(10.0)
				tree_height ~ dnUnif(0,1.0)
				speciesTree ~ dnBDP(lambda=speciation, mu=extinction, origin=tree_height, nTaxa=n_species, names=s_names)

				# Gene-Tree multispecies coalescent model
				# Then we can use the multispecies coalescent model to generate gene trees. We simulate a set of gene trees, using one 
				# effective population size per branch, and after having constructed a map between species names and sequence names:

				# Build the mapping between sequence names and species names.
				totalNumberOfAlleles = 1
				for (i in 1:n_species) {
        			for (j in 1:n_alleles[i]) {
                		taxa[totalNumberOfAlleles] = taxon(taxonName=s_names[i]+"_"+j, speciesName=s_names[i])
                		totalNumberOfAlleles = totalNumberOfAlleles+1
        			}
				}

				# Set the effective population sizes
				n_branches = speciesTree.nnodes()
				for (i in 1:n_branches) {
					Ne[i] ~ dnGamma(shape=1.0,rate=1.0)
				}

				# Simulate gene trees
				for (i in 1:n_loci) {
        				# The gene tree from the multispecies coalescent process
        				locusTrees[i] ~ dnCoalMultiSpeciesConst(speciesTree=speciesTree, Ne=Ne, taxa=taxa)
				}
				
				# Now, we get the log probability of the gene tree given its parameters:
				print(locusTrees[1].lnProbability() )
				
				# And we can simulate another gene tree for this locus:
				locusTrees[1].redraw()
				
				# And recompute its log probability:
				print(locusTrees[1].lnProbability() )
				
                 ]]>

            </example>

            <reference>
                <citation>
                    Rannala B and Yang Z. 2003. "Bayes estimation of species divergence times and ancestral population sizes using DNA sequences from multiple loci.". Genetics, 164:4, 1645-1656.
                </citation>
                <url>http://www.ncbi.nlm.nih.gov.gate1.inist.fr/pmc/articles/PMC1462670/</url>
            </reference>

            <author>Bastien Boussau</author>

            <seeAlso>
                <!-- The xslt page will try to auto generate links to the referred help entries, therefore only exact names of help items should be listed here (case sensitive) -->
                <entry>maximumTree</entry>
                <entry>fnPomo</entry>
            </seeAlso>


        </constructor-help-entry>
    
    

    </distribution-help-entry>

</revbayes-help>

