<?xml version="1.0"?>
<?xml-stylesheet href="lib/help.xsl" type="text/xsl"?>

<revbayes-help
	xmlns="http://www.revbayes.org/schema/help-entry"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.revbayes.org/schema/help-entry lib/rb-help-entry.xsd"
>
    <monitor-help-entry>

        <name>mnModel</name>

        <title>Entire model monitor.</title>

        <description>
            <p>
            Monitor all numeric variables of a model and print them to a file.
            </p>
        </description>
    
        <constructor-help-entry>
        

            <usage>
                <![CDATA[
                 mnModel( String filename, Natural printgen = 1, String separator = TAB, Bool posterior = TRUE, Bool likelihood = TRUE, Bool prior = TRUE, Bool append = FALSE, Bool stochasticOnly = FALSE )
                 ]]> 
            </usage>
        
            <argument>
                <label>filename</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>The file to log to.</description>
                <valueType>String</valueType>
            </argument>
            <argument>
                <label>printgen</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>The frequency of monitoring (i.e. thinning).</description>
                <valueType>Natural</valueType>
                <defaultValue>1</defaultValue>
            </argument>
            <argument>
                <label>separator</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>The separator between variables in the file. The default is a tab.</description>
                <valueType>String</valueType>
                <defaultValue>	</defaultValue>
            </argument>
            <argument>
                <label>posterior</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>Should the posterior probability be printed too?</description>
                <valueType>Bool</valueType>
                <defaultValue>TRUE</defaultValue>
            </argument>
            <argument>
                <label>likelihood</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>Should the likelihood be printed too?</description>
                <valueType>Bool</valueType>
                <defaultValue>TRUE</defaultValue>
            </argument>
            <argument>
                <label>prior</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>Should the prior probability be printed too?</description>
                <valueType>Bool</valueType>
                <defaultValue>TRUE</defaultValue>
            </argument>
            <argument>
                <label>append</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>Should we append to an existing file?</description>
                <valueType>Bool</valueType>
                <defaultValue>FALSE</defaultValue>
            </argument>
            <argument>
                <label>stochasticOnly</label>
                <argumentPassingMethod>by-value</argumentPassingMethod>
                <argumentNodeType>any-DAG-node</argumentNodeType>
                <description>Should we monitor stochastic nodes only or deterministic nodes as well?</description>
                <valueType>Bool</valueType>
                <defaultValue>FALSE</defaultValue>
            </argument>

            <returnValue>Mntr_Model, Monitor, WorkspaceObject, RevObject</returnValue>

            <details>
                <!-- Since this section can be lengthy, the text is sectioned with <p> tags -->
                <p>
                The model monitor is very useful to automatically collect all variables in a model and monitors them.
                The model monitor traverses the model graph and collects all numeric variables (e.g., no trees).
                Numeric variables can be read in and interpreted easier than other variables.
                The model monitor prints the current value of the variables every printgen iterations to the specified file.
                </p>
            </details>

            <example>
                <![CDATA[
                    # Create a simple model (unclamped)
                    a ~ exponential(1)
                    mymodel = model(a)
                    
                    # Create a move vector and a monitor vector
                    moves[1] = mvScale(a, lambda=1.0, weight=1.0)
                    monitors[1] = mnModel("output/out.log")
                    
                    # Create an mcmc object
                    mymcmcObject = mcmc( mymodel, monitors, moves)
                    
                    # Run a short analysis
                    mymcmcObject.burnin( generations = 400, tuningInterval = 100)
                    mymcmcObject.run( generations = 400)
                 ]]>

            </example>

            <author>Sebastian Hoehna</author>

            <seeAlso>
                <!-- The xslt page will try to auto generate links to the referred help entries, therefore only exact names of help items should be listed here (case sensitive) -->
                <entry>mnFile</entry>
                <entry>mnScreen</entry>
                <entry>mcmc</entry>
            </seeAlso>


        </constructor-help-entry>
    
    

    </monitor-help-entry>

</revbayes-help>

