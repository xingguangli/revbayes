################################################################################
#
# RevBayes Validation Test: Tamura (92) + Gamma with fixed time tree
# 
# Model: Sequences evolve under the Tamura (92) model with gamma distributed
#        rate variation among sites and the tree is fixed.
#            
#
# authors: Sebastian Hoehna
#
################################################################################

#######################
# Reading in the Data #
#######################

###### This just defines a single model for all sites #######

### Read in sequence data for both genes

data <- readDiscreteCharacterData("data/primates_cytb.nex")

# set my move index
mi = 0



######################
# Substitution Model #
######################

#### specify the HKY substitution model applied uniformly to all sites ###


gc ~ dnBeta(1,1)
moves[++mi] = mvSlide(gc,weight=2)

tstv ~ dnGamma(2,2)
moves[++mi] = mvSlide(tstv,weight=2)
moves[++mi] = mvScale(tstv,weight=2)

Q := fnT92(kappa=tstv, gc=gc) 


#############################
# Among Site Rate Variation #
#############################

alpha_prior <- 0.05
alpha ~ dnExponential( alpha_prior )
gamma_rates := fnDiscretizeGamma( alpha, alpha, 4, false )

# add moves for the stationary frequencies, exchangeability rates and the shape parameter
moves[++mi] = mvScale(alpha,weight=2)





##############
# Tree model #
##############

psi <- readTrees( "data/primates.tree" )[1]






###################
# PhyloCTMC Model #
###################

# We use an empirical estimate of the clock rate which is 0.01 (=1%) per million years per site
clockRate <- 0.01

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, branchRates=clockRate, siteRates=gamma_rates, type="DNA")

# attach the data
seq.clamp(data)




#############
# THE Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel = model(Q)






monitors[1] = mnModel(filename="output/primates_cytb.log",printgen=10, separator = TAB)

mymcmc = mcmc(mymodel, monitors, moves)

validation = validationAnalysis( mymcmc, 1000 )
validation.burnin(generations=10000,tuningInterval=250)
validation.run(generations=30000)
validation.summarize()


# you may want to quit RevBayes now
q()

